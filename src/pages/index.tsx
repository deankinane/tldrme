import { type NextPage } from 'next'
import Head from 'next/head'
import { signIn, signOut, useSession } from 'next-auth/react'
import React from 'react'
import { trpc } from '../utils/trpc'
import Link from 'next/link'
import Script from 'next/script'

interface Props {
	test: string
}
const Home: NextPage<Props> = ({ test }: Props) => {
	return (
		<>
			<Head>
				<title>Create T3 App</title>
				<meta name="description" content="Generated by create-t3-app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main className="m-auto h-full xl:max-w-7xl">
				<p>{test}</p>
				<Link href="/editor">Editor</Link>
			</main>
		</>
	)
}

export default Home

export async function getServerSideProps() {
	console.log('home', 'getServerSideProps')
	return {
		props: {
			test: 'test message',
		},
	}
}

// const AuthShowcase: React.FC = () => {
// 	const { data: sessionData } = useSession()

// 	const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery(
// 		undefined, // no input
// 		{ enabled: sessionData?.user !== undefined }
// 	)

// 	return (
// 		<div className="flex flex-col items-center justify-center gap-4">
// 			<p className="text-center text-2xl text-white">
// 				{sessionData && (
// 					<span>Logged in as {sessionData.user?.name}</span>
// 				)}
// 				{secretMessage && <span> - {secretMessage}</span>}
// 			</p>
// 			<button
// 				className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
// 				onClick={sessionData ? () => signOut() : () => signIn()}
// 			>
// 				{sessionData ? 'Sign out' : 'Sign in'}
// 			</button>
// 		</div>
// 	)
// }
